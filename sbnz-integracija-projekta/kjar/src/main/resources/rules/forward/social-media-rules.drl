package forward

import com.ftn.sbnz.model.models.Post;
import com.ftn.sbnz.model.models.Recommendation;
import com.ftn.sbnz.model.models.User;
import java.time.LocalDateTime
import java.time.DayOfWeek

// Pravilo 1: Preporuka sadržaja na osnovu interesovanja korisnika
rule "Content Recommendation Based on Interests"
    when
        $user: User($userId: id, $interests: interests)
        $post: Post(userId != $userId, category memberOf $interests, 
                    engagementRate > 0.03) // Minimalni engagement rate
        not Recommendation(userId == $userId, postId == $post.id)
    then
        Recommendation rec = new Recommendation($userId, $post.getId(), 
                                              $post.getContentType(), 
                                              $post.getCategory(), 
                                              $post.getContent());
        rec.setPriorityScore(5.0);
        rec.setReasoning("Matches user interests: " + $post.getCategory());
        rec.setPredictedEngagement($post.getEngagementRate());
        insert(rec);
        System.out.println("✓ Created interest-based recommendation for user: " + 
                          $user.getName() + " -> " + $post.getCategory() + " content");
end

// Pravilo 2: Bonus za video sadržaj ako je korisnik influenser
rule "Video Content Bonus for Influencers"
    when
        $user: User($userId: id, creatorType == "influencer")
        $rec: Recommendation(userId == $userId, contentType == "video", 
                           priorityScore < 8.0)
    then
        $rec.increasePriorityScore(2.0, "Video content bonus for influencer");
        update($rec);
        System.out.println("✓ Video bonus applied for influencer: " + $user.getName());
end

// Pravilo 3: Preporuka optimalnog vremena objavljivanja
rule "Optimal Publishing Time Recommendation"
    when
        $user: User($userId: id, creatorType == "influencer", audienceSize > 1000)
        $rec: Recommendation(userId == $userId, contentType == "video", 
                           recommendedPublishTime == null)
    then
        // Za influensere sa velikim brojem pratilaca, preporuči večernje sate
        LocalDateTime optimalTime = LocalDateTime.now()
                                                .with(DayOfWeek.TUESDAY)
                                                .withHour(18)
                                                .withMinute(0);
        $rec.setRecommendedPublishTime(optimalTime);
        $rec.increasePriorityScore(1.5, "Optimal time for large audience");
        update($rec);
        System.out.println("✓ Optimal time set for " + $user.getName() + 
                          ": " + optimalTime.getDayOfWeek() + " at 18:00");
end

// Pravilo 4: High-engagement sadržaj dobija dodatni prioritet
rule "High Engagement Content Priority"
    when
        $rec: Recommendation($engagement: predictedEngagement, 
                           predictedEngagement > 0.05)
    then
        double bonus = $engagement * 10; // Bonus na osnovu engagement rate-a
        $rec.increasePriorityScore(bonus, 
                                 "High engagement potential: " + 
                                 String.format("%.3f", $engagement));
        update($rec);
        System.out.println("✓ High engagement bonus: +" + 
                          String.format("%.2f", bonus) + " points");
end

// Pravilo 5: Lokalne preporuke - korisnici iz iste lokacije
rule "Local Content Recommendations"
    when
        $user1: User($userId1: id, $location: location, location != null)
        $user2: User(id != $userId1, location == $location)
        $post: Post(userId == $user2.getId(), engagementRate > 0.04)
        not Recommendation(userId == $userId1, postId == $post.id)
    then
        Recommendation rec = new Recommendation($userId1, $post.getId(), 
                                              $post.getContentType(), 
                                              $post.getCategory(), 
                                              $post.getContent());
        rec.setPriorityScore(4.0);
        rec.increasePriorityScore(1.0, "Local content from " + $location);
        rec.setPredictedEngagement($post.getEngagementRate());
        insert(rec);
        System.out.println("✓ Local recommendation created for users in: " + $location);
end

// Pravilo 6: Lifestyle sadržaj za vikend
rule "Weekend Lifestyle Content"
    when
        $rec: Recommendation(category == "lifestyle", 
                           recommendedPublishTime == null)
    then
        LocalDateTime weekendTime = LocalDateTime.now()
                                                .with(DayOfWeek.SATURDAY)
                                                .withHour(10)
                                                .withMinute(0);
        $rec.setRecommendedPublishTime(weekendTime);
        $rec.increasePriorityScore(0.8, "Weekend timing for lifestyle content");
        update($rec);
        System.out.println("✓ Weekend timing set for lifestyle content");
end